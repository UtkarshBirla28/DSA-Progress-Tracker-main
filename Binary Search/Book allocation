import java.util.ArrayList;
public class Solution {

    public static boolean isPossibleBitch(ArrayList<Integer> arr, int n, int m,int mid,int sum,int student,int i)
    {
        if(i==n)
        {
            return true;
        }
      if(sum+arr.get(i)<=mid)
      {
          sum+=arr.get(i);
      }
      else{
          student++;
          if(student>m||arr.get(i)>mid)
          {
              return false;
          }
          sum=arr.get(i);
      }

      return isPossibleBitch(arr,n,m,mid,sum,student,i+1);

    } 

    public static int binarySearch(int arr[],int start,int end,int ans,int n,int m)
    {
       if(start>end)
       {
           return ans;
       }

        int mid = start+(end-start)/2;

        if(isPossibleBitch(arr, n, m, mid, 0, 1,0))
        {   
           ans=mid;
           return binarySearch(arr,start,mid-1,ans);
        }
        else{
            return binarySearch(arr,mid+1,end,ans);
        }
    }
    public static int findPages(ArrayList<Integer> arr, int n, int m) {
     
     if(n<m)
     {
         return -1;
     }
     
     return binarySearch(arr,0,n,-1);
        
    }

        
   
