class Solution {
    public int widthOfBinaryTree(TreeNode root) {
        if(root == null) return 0;

        Queue<Pair<TreeNode, Integer>> q = new LinkedList<>();
        int ans = 1;
        q.add(new Pair(root, 0));

        while(!q.isEmpty()){
            int size = q.size(), index = 0;
            int start = q.peek().getValue(); //starting index

            for(int i=0;i<size;i++){ 
              Pair<TreeNode, Integer> p = q.remove();
              index = p.getValue();
              TreeNode t = p.getKey();

            if(t.left != null){
                q.add(new Pair(t.left, 2*index+1));
            } 
            if(t.right != null){
                q.add(new Pair(t.right, 2*index+2));
            }
          }

          ans = Math.max(ans, index-start+1);
        }

        return ans;
    }
}
