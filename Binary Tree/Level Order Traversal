/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();

        if(root == null) return ans;
        
        q.add(root);
        q.add(null); //to seperate levels

        while(!q.isEmpty()){
            TreeNode t = q.remove();

            if(t == null){
                ans.add(new ArrayList<>(temp));
                temp.clear();

                if(!q.isEmpty()) {
                    q.add(null); // Add null as a level separator if there are more levels
                }
            }
            else{
                temp.add(t.val);

                if(t.left != null){
                    q.add(t.left);
                }

                if(t.right != null){
                    q.add(t.right);
                }
            }
        }

        return ans;
    }
}
